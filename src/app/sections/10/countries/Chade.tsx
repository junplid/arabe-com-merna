"use client";

import Image from "next/image";
import { PropsCountryComponent } from "../map";

interface PropsComponentCountryChade_I extends PropsCountryComponent {}

export default function ComponentCountryChade(
  props: PropsComponentCountryChade_I
): JSX.Element {
  return (
    <div
      onClick={() => !props.active && props.onSelect("chade")}
      className="pointer-events-none group country chade"
      title="Chade"
    >
      <Image
        src={"/images/section-10/paises/icons/chade.png"}
        height={28}
        width={28}
        alt="Chade"
        className={`country icon-chade duration-200 ${
          props.active ? "opacity-0" : "opacity-100 cursor-pointer"
        }`}
        style={{ pointerEvents: "all" }}
      />
      <svg
        width="115"
        height="181"
        viewBox="0 0 115 181"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g filter="url(#filter0_b_225_22)">
          <path
            d="M91.9495 145.871C92.8224 144.601 95.3518 142.988 101.294 141.63C103.151 141.205 105.238 139.827 105.238 137.921V137.375C105.238 136.427 104.791 135.534 104.033 134.964L103.275 134.395C102.882 134.101 102.566 133.715 102.355 133.271L99.8355 127.977C99.5995 127.481 99.5023 126.93 99.5544 126.384L99.8744 123.021C100.008 121.616 98.9927 120.363 97.5908 120.202L97.4003 120.181C95.2318 119.932 94.3954 117.223 96.0466 115.795C96.5972 115.319 96.9136 114.627 96.9136 113.9V109.534C96.9136 108.571 97.3832 107.669 98.1717 107.117C99.3067 106.322 99.7357 104.844 99.203 103.565L98.0376 100.766C97.41 99.2591 98.086 97.5255 99.5681 96.841L103.474 95.0373C104.549 94.5407 105.238 93.4643 105.238 92.2798V89.5462C105.238 88.1525 106.186 86.9377 107.538 86.5995L111.853 85.5201C113.228 85.1763 114.182 83.928 114.153 82.5115L113.409 46.0609C113.387 44.944 112.753 43.9298 111.759 43.4201L30.4874 1.74251C29.583 1.27869 28.5064 1.29802 27.6192 1.79403L20.5029 5.77241C19.4733 6.34803 18.8701 7.46775 18.9557 8.64427L23.6743 73.4361C23.7318 74.2258 23.4787 75.0067 22.9689 75.6125L2.12658 100.378C1.42923 101.207 1.22582 102.344 1.59271 103.363L6.10829 115.904C6.59273 117.25 8.00115 117.968 9.36378 118.402C15.1071 120.23 16.7452 131.772 16.8321 138.43C16.837 138.803 16.9045 139.17 17.0383 139.518L20.1966 147.728C20.962 149.717 19.4941 151.856 17.3624 151.856H6.93845C4.19019 151.856 14.43 169 20.755 178.945C21.3832 179.932 22.524 180.46 23.6853 180.312L54.406 176.397C55.0735 176.312 55.6938 176.008 56.1697 175.532L61.9422 169.76C62.4234 169.279 62.6938 168.626 62.6938 167.946C62.6938 166.529 63.8462 165.392 65.257 165.261C77.574 164.111 86.7477 154.921 90.7514 149.087C91.383 148.167 91.3175 146.791 91.9495 145.871Z"
            fill={props.active ? "#e9d74e" : "#0C6746"}
            fillOpacity={props.active ? "0.8" : "0.5"}
            className={`duration-200 ${
              props.active ? "" : "group-hover:fill-yellow-200 cursor-pointer"
            }`}
            style={{ pointerEvents: "all" }}
          />
          <path
            d="M91.9495 145.871C92.8224 144.601 95.3518 142.988 101.294 141.63C103.151 141.205 105.238 139.827 105.238 137.921V137.375C105.238 136.427 104.791 135.534 104.033 134.964L103.275 134.395C102.882 134.101 102.566 133.715 102.355 133.271L99.8355 127.977C99.5995 127.481 99.5023 126.93 99.5544 126.384L99.8744 123.021C100.008 121.616 98.9927 120.363 97.5908 120.202L97.4003 120.181C95.2318 119.932 94.3954 117.223 96.0466 115.795C96.5972 115.319 96.9136 114.627 96.9136 113.9V109.534C96.9136 108.571 97.3832 107.669 98.1717 107.117C99.3067 106.322 99.7357 104.844 99.203 103.565L98.0376 100.766C97.41 99.2591 98.086 97.5255 99.5681 96.841L103.474 95.0373C104.549 94.5407 105.238 93.4643 105.238 92.2798V89.5462C105.238 88.1525 106.186 86.9377 107.538 86.5995L111.853 85.5201C113.228 85.1763 114.182 83.928 114.153 82.5115L113.409 46.0609C113.387 44.944 112.753 43.9298 111.759 43.4201L30.4874 1.74251C29.583 1.27869 28.5064 1.29802 27.6192 1.79403L20.5029 5.77241C19.4733 6.34803 18.8701 7.46775 18.9557 8.64427L23.6743 73.4361C23.7318 74.2258 23.4787 75.0067 22.9689 75.6125L2.12658 100.378C1.42923 101.207 1.22582 102.344 1.59271 103.363L6.10829 115.904C6.59273 117.25 8.00115 117.968 9.36378 118.402C15.1071 120.23 16.7452 131.772 16.8321 138.43C16.837 138.803 16.9045 139.17 17.0383 139.518L20.1966 147.728C20.962 149.717 19.4941 151.856 17.3624 151.856H6.93845C4.19019 151.856 14.43 169 20.755 178.945C21.3832 179.932 22.524 180.46 23.6853 180.312L54.406 176.397C55.0735 176.312 55.6938 176.008 56.1697 175.532L61.9422 169.76C62.4234 169.279 62.6938 168.626 62.6938 167.946C62.6938 166.529 63.8462 165.392 65.257 165.261C77.574 164.111 86.7477 154.921 90.7514 149.087C91.383 148.167 91.3175 146.791 91.9495 145.871Z"
            stroke="#F3F9F7"
            strokeOpacity="0.25"
            strokeWidth="1.19199"
          />
        </g>
        <defs>
          <filter
            id="filter0_b_225_22"
            x="-5.25795"
            y="-5.26283"
            width="126.082"
            height="192.27"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feGaussianBlur in="BackgroundImageFix" stdDeviation="3.03742" />
            <feComposite
              in2="SourceAlpha"
              operator="in"
              result="effect1_backgroundBlur_225_22"
            />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="effect1_backgroundBlur_225_22"
              result="shape"
            />
          </filter>
        </defs>
      </svg>
    </div>
  );
}
